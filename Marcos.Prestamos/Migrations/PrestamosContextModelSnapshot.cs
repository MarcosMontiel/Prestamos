// <auto-generated />
using Marcos.Prestamos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Marcos.Prestamos.Migrations
{
    [DbContext(typeof(PrestamosContext))]
    partial class PrestamosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Marcos.Prestamos.Models.CliCatEstadoFinal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("CliCatEstadoFinal");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.CliCatEstadoTemporal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("CliCatEstadoTemporal");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.CliCliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaveCliente")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("FKCliCatEstadoFinal");

                    b.Property<int>("FKCliCatEstadoTemporal");

                    b.Property<int>("FKComCatSucursal");

                    b.Property<int>("FKComPersona");

                    b.Property<int>("FKEmpEmpleado");

                    b.Property<DateTime>("FechaAlta");

                    b.Property<DateTime>("FechaBaja");

                    b.HasKey("ID");

                    b.HasIndex("FKCliCatEstadoFinal");

                    b.HasIndex("FKCliCatEstadoTemporal");

                    b.HasIndex("FKComCatSucursal");

                    b.HasIndex("FKComPersona");

                    b.HasIndex("FKEmpEmpleado");

                    b.ToTable("CliCliente");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComCatGenero", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ComCatGenero");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComCatSucursal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ComCatSucursal");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComDirCatColonia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FKComDirCatMunicipio");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("FKComDirCatMunicipio");

                    b.ToTable("ComDirCatColonia");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComDirCatEstado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ComDirCatEstado");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComDirCatMunicipio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FKComDirCatEstado");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("FKComDirCatEstado");

                    b.ToTable("ComDirCatMunicipio");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComDirDireccion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CP");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("FKComDirCatColonia");

                    b.Property<int>("FKComDirCatEstado");

                    b.Property<int>("FKComDirCatMunicipio");

                    b.Property<int>("FKComPersona");

                    b.Property<int>("NumExt");

                    b.Property<int>("NumInt");

                    b.HasKey("ID");

                    b.HasIndex("FKComDirCatColonia");

                    b.HasIndex("FKComDirCatEstado");

                    b.HasIndex("FKComDirCatMunicipio");

                    b.HasIndex("FKComPersona");

                    b.ToTable("ComDirDireccion");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComPersona", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AMaterno")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("APaterno")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Curp")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.Property<int>("FKComCatGenero");

                    b.Property<int?>("FKComCatSexo");

                    b.Property<DateTime>("FechaNac");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("FKComCatSexo");

                    b.ToTable("ComPersona");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.EmpCatEstadoFinal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("EmpCatEstadoFinal");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.EmpCatEstadoTemporal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("EmpCatEstadoTemporal");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.EmpCatPuesto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("EmpCatPuesto");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.EmpEmpleado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaveEmpleado")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("FKComCatSucursal");

                    b.Property<int>("FKComPersona");

                    b.Property<int>("FKEmpCatEstadoFinal");

                    b.Property<int>("FKEmpCatEstadoTemporal");

                    b.Property<int>("FKEmpCatPuesto");

                    b.Property<DateTime>("FechaAlta");

                    b.Property<DateTime>("FechaBaja");

                    b.Property<string>("NoImms")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasMaxLength(13);

                    b.HasKey("ID");

                    b.HasIndex("FKComCatSucursal");

                    b.HasIndex("FKComPersona");

                    b.HasIndex("FKEmpCatEstadoFinal");

                    b.HasIndex("FKEmpCatEstadoTemporal");

                    b.HasIndex("FKEmpCatPuesto");

                    b.ToTable("EmpEmpleado");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.PreCatArticulo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("PreCatArticulo");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.PreCatEstado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("PreCatEstado");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.PreCatEstadoPago", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("PreCatEstadoPago");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.PrePlantillaPagos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FKPreCatEstadoPago");

                    b.Property<int>("FKPreSolicitudPrestamo");

                    b.Property<DateTime>("FechaPago");

                    b.Property<DateTime>("FechaRequeridaPago");

                    b.Property<int>("NoPago");

                    b.Property<decimal>("PagoRealizado");

                    b.Property<decimal>("PagoRequerido");

                    b.HasKey("ID");

                    b.HasIndex("FKPreCatEstadoPago");

                    b.HasIndex("FKPreSolicitudPrestamo");

                    b.ToTable("PrePlantillaPagos");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.PreSolicitudPrestamo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaveSolicitud")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CodigoArticulo");

                    b.Property<int>("FKCliCliente");

                    b.Property<int>("FKEmpEmpleado");

                    b.Property<int>("FKPreCatArticulo");

                    b.Property<int>("FKPreCatEstado");

                    b.Property<DateTime>("FechaSolicitud");

                    b.Property<int>("Gramos");

                    b.Property<int>("Kilates");

                    b.Property<decimal>("MontoAprobado");

                    b.Property<decimal>("MontoSolicitado");

                    b.HasKey("ID");

                    b.HasIndex("FKCliCliente");

                    b.HasIndex("FKEmpEmpleado");

                    b.HasIndex("FKPreCatArticulo");

                    b.HasIndex("FKPreCatEstado");

                    b.ToTable("PreSolicitudPrestamo");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.UsuCatEstado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("UsuCatEstado");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.UsuCatRol", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("UsuCatRol");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.UsuUsuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FKEmpEmpleado");

                    b.Property<int>("FKUsuCatEstado");

                    b.Property<int>("FKUsuCatRol");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("FKEmpEmpleado");

                    b.HasIndex("FKUsuCatEstado");

                    b.HasIndex("FKUsuCatRol");

                    b.ToTable("UsuUsuario");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.VenArticuloPrestamo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<int>("FKEmpEmpleado");

                    b.Property<int>("FKPreSolicitudPrestamo");

                    b.Property<int>("FKVenCatEstadoVenta");

                    b.Property<DateTime>("FechaVenta");

                    b.Property<decimal>("PrecioArticulo");

                    b.HasKey("ID");

                    b.HasIndex("FKEmpEmpleado");

                    b.HasIndex("FKPreSolicitudPrestamo");

                    b.HasIndex("FKVenCatEstadoVenta");

                    b.ToTable("VenArticuloPrestamo");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.VenCatEstadoVenta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("VenCatEstadoVenta");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.CliCliente", b =>
                {
                    b.HasOne("Marcos.Prestamos.Models.CliCatEstadoFinal", "CliCatEstadoFinal")
                        .WithMany()
                        .HasForeignKey("FKCliCatEstadoFinal")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.CliCatEstadoTemporal", "CliCatEstadoTemporal")
                        .WithMany()
                        .HasForeignKey("FKCliCatEstadoTemporal")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.ComCatSucursal", "ComCatSucursal")
                        .WithMany()
                        .HasForeignKey("FKComCatSucursal")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.ComPersona", "ComPersona")
                        .WithMany()
                        .HasForeignKey("FKComPersona")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.EmpEmpleado", "EmpEmpleado")
                        .WithMany()
                        .HasForeignKey("FKEmpEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComDirCatColonia", b =>
                {
                    b.HasOne("Marcos.Prestamos.Models.ComDirCatMunicipio", "ComDirCatMunicipio")
                        .WithMany()
                        .HasForeignKey("FKComDirCatMunicipio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComDirCatMunicipio", b =>
                {
                    b.HasOne("Marcos.Prestamos.Models.ComDirCatEstado", "ComDirCatEstado")
                        .WithMany()
                        .HasForeignKey("FKComDirCatEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComDirDireccion", b =>
                {
                    b.HasOne("Marcos.Prestamos.Models.ComDirCatColonia", "ComDirCatColonia")
                        .WithMany()
                        .HasForeignKey("FKComDirCatColonia")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.ComDirCatEstado", "ComDirCatEstado")
                        .WithMany()
                        .HasForeignKey("FKComDirCatEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.ComDirCatMunicipio", "ComDirCatMunicipio")
                        .WithMany()
                        .HasForeignKey("FKComDirCatMunicipio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.ComPersona", "ComPersona")
                        .WithMany()
                        .HasForeignKey("FKComPersona")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.ComPersona", b =>
                {
                    b.HasOne("Marcos.Prestamos.Models.ComCatGenero", "ComCatGenero")
                        .WithMany()
                        .HasForeignKey("FKComCatSexo");
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.EmpEmpleado", b =>
                {
                    b.HasOne("Marcos.Prestamos.Models.ComCatSucursal", "ComCatSucursal")
                        .WithMany()
                        .HasForeignKey("FKComCatSucursal")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.ComPersona", "ComPersona")
                        .WithMany()
                        .HasForeignKey("FKComPersona")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.EmpCatEstadoFinal", "EmpCatEstadoFinal")
                        .WithMany()
                        .HasForeignKey("FKEmpCatEstadoFinal")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.EmpCatEstadoTemporal", "EmpCatEstadoTemporal")
                        .WithMany()
                        .HasForeignKey("FKEmpCatEstadoTemporal")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.EmpCatPuesto", "EmpCatPuesto")
                        .WithMany()
                        .HasForeignKey("FKEmpCatPuesto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.PrePlantillaPagos", b =>
                {
                    b.HasOne("Marcos.Prestamos.Models.PreCatEstadoPago", "PreCatEstadoPago")
                        .WithMany()
                        .HasForeignKey("FKPreCatEstadoPago")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.PreSolicitudPrestamo", "PreSolicitudPrestamo")
                        .WithMany()
                        .HasForeignKey("FKPreSolicitudPrestamo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.PreSolicitudPrestamo", b =>
                {
                    b.HasOne("Marcos.Prestamos.Models.CliCliente", "CliCliente")
                        .WithMany()
                        .HasForeignKey("FKCliCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.EmpEmpleado", "EmpEmpleado")
                        .WithMany()
                        .HasForeignKey("FKEmpEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.PreCatArticulo", "PreCatArticulo")
                        .WithMany()
                        .HasForeignKey("FKPreCatArticulo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.PreCatEstado", "PreCatEstado")
                        .WithMany()
                        .HasForeignKey("FKPreCatEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.UsuUsuario", b =>
                {
                    b.HasOne("Marcos.Prestamos.Models.EmpEmpleado", "EmpEmpleado")
                        .WithMany()
                        .HasForeignKey("FKEmpEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.UsuCatEstado", "UsuCatEstado")
                        .WithMany()
                        .HasForeignKey("FKUsuCatEstado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.UsuCatRol", "UsuCatRol")
                        .WithMany()
                        .HasForeignKey("FKUsuCatRol")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marcos.Prestamos.Models.VenArticuloPrestamo", b =>
                {
                    b.HasOne("Marcos.Prestamos.Models.EmpEmpleado", "EmpEmpleado")
                        .WithMany()
                        .HasForeignKey("FKEmpEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.PreSolicitudPrestamo", "PreSolicitudPrestamo")
                        .WithMany()
                        .HasForeignKey("FKPreSolicitudPrestamo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marcos.Prestamos.Models.VenCatEstadoVenta", "VenCatEstadoVenta")
                        .WithMany()
                        .HasForeignKey("FKVenCatEstadoVenta")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
